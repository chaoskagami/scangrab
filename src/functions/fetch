#!/bin/bash

# Copyright (C) 2015  Jon Feldman/@chaoskagami
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#

# AVOID CHANGING THIS FUNCTION IF AT ALL POSSIBLE.
# THINGS WILL BREAK IN EVERYTHING IF THIS ONE BREAKS.
fetch() {
	if [ $_FETCHTOOL = 1 ]; then
		if [ $SAFETY_HACKS = 1 ] || [ "$1" = "-" ]; then
			_CMD="$_FETCH_CMD \"$1\""
		else
			_CMD="$_FETCH_CMD --content-disposition \"$1\""
		fi

		if [ ! $CLOBBER = 1 ]; then
			_CMD="$_CMD -c \"$1\""
		fi

		if [ $use_cookies = 1 ]; then
			_CMD="$_CMD --load-cookies=$COOKIEJAR"
		fi

		# Wget uses content-disposition to hopefully get a good name in abscence of one.
		# Of course, that assumes that SAFETY_HACKS is off.

		STDOUT=0
		if [ "$2" = "-" ]; then
			_CMD="$_CMD -O -"
			STDOUT=1
		elif [ ! "$2" = "" ]; then
			_CMD="$_CMD -O \"$2\""
		fi

	elif [ $_FETCHTOOL = 2 ]; then

		_CMD="$_FETCH_CMD $1"
		if [ $use_cookies = 1 ]; then
			_CMD="$_CMD -b $COOKIEJAR -c $COOKIEJAR"
		fi

		if [ "$2" = "" ]; then
			_CMD="$_CMD > $(basename "$1")"
		elif [ "$2" = "-" ]; then
			_CMD="$_CMD"
		else
			_CMD="$_CMD > \"$2\""
		fi

	elif [ $_FETCHTOOL = 3 ]; then

		_CMD="$_FETCH_CMD $1"
		if [ $use_cookies = 1 ]; then
			_CMD="$_CMD --load-cookies=$COOKIEJAR"
		fi

		if [ "$2" = "" ]; then
			_CMD="$_CMD -o $(basename "$1")"
		elif [ "$2" = "-" ]; then
			_CMD="$_CMD -o -"
		else
			_CMD="$_CMD -o \"$2\""
		fi
	fi
	
	if [ $VERBOSE = 1 ]; then
		echo -e "\n$_CMD"
	fi

	# Wget doesn't have an option to clobber forcibly
	# with content disposition on. I'm so bemused by this
	# that I'm not even sure what to say.

	# We use a rather idiotic workaround. We download to a temp folder,
	# and move it out afterwards.

	if [ $CLOBBER = 1 ] && [ $_FETCHTOOL = 1 ] && [ ! $STDOUT = 1 ]; then
		mkdir -p "wget.tmp"
		cd wget.tmp
	fi

	eval $_CMD 2>/dev/null
	FETCH_RESULT=$?
	
	if [ $CLOBBER = 1 ] && [ $_FETCHTOOL = 1 ] && [ ! $STDOUT = 1 ]; then
		mv ./* ../ 2>/dev/null
		cd ..
		rm -rf wget.tmp
	fi

	# If this is an image, check validity.
	MIME="$(mimetype "$_FILE")"
	if [ "$MIME" = "image/jpeg" ] || [ "$MIME" = "image/png" ] || [ "$MIME" = "image/gif" ] || [ "$MIME" = "image/bmp" ]; then
		verify "$_FILE"
		VALID=$?
		if [ ! $VALID = 0 ]; then
			echo "[WARN] File '$_FILE' is corrupted."
		fi
	fi

	return $FETCH_RESULT
}
