
# Determine operation.

if [ "$1" = "auto" -o "$1" = "a" ]; then # Common operation - Automatic Module Select.
	for module in ${MODS[@]}; do
		eval auto_$module $2
		RETCHECK=$?
		if [ $RETCHECK = 1 ]; then
			eval dl_$module $2
			exit 0
		fi
	done
elif [ "$1" = "batch" -o "$1" = "l" ]; then # Common operation - typed batch.
	# $2 is a file. Read it in line by line as $1 and $2.
	IFS=$'\n' read -d '' -r -a LINES < $2
	NEW=""
	for chunk in "${LINES[@]}"; do
		NEW="$NEW$0 $chunk ;"
	done
	eval $NEW
elif [ "$1" = "autobatch" -o "$1" = "b" ]; then # Common operation - auto batch.
	# $2 is a file. Read it in line by line as $1 and $2.
	IFS=$'\n' read -d '' -r -a LINES < $2
	NEW=""
	for chunk in "${LINES[@]}"; do
		NEW="$NEW$0 auto $chunk ;"
	done
	eval $NEW
elif [ "$1" = "scrape" -o "$1" = "s" ]; then # Link scraper.
	for module in ${MODS[@]}; do
		eval auto_$module $2
		RETCHECK=$?
		if [ $RETCHECK = 1 ]; then
			eval scrape_$module $2 $3
			exit 0
		fi
	done
else # Not a common operation - either invalid or a module-op.

	# Detect whether it is a module operation.

	MATCH=""

	for module in ${MODS[@]}; do
		if [ "$1" = "$module" ]; then
			MATCH="dl_$module $2"
		fi
	done

	if [ "$MATCH" = "" ]; then # All checks failed. Usage~
		type 1
		echo -e "Usage:"
		type 0
		echo -ne "\t$0\t"
		color 3
		echo -ne "OPERATION\t"
		color 5
		echo -e "[PARAMS]"
		type 0
		type 1
		echo -e "Operations:"
		type 0
		color 3
		echo -e "\tauto (a)"
		type 0
		echo -e "\t\tChooses module based on URL"
		color 3
		echo -e "\tbatch (l)"
		type 0
		echo -e "\t\tTakes a file with a list of types and URLs"
		color 3
		echo -e "\tautobatch (b)"
		type 0
		echo -e "\t\tTakes a file with URLs which will be run with auto."
		color 3
		echo -e "\tscrape (s)"
		type 0
		echo -e "\t\tWill take a manga's page and scrape chapters to"
		echo -e "\t\ta file named batch.txt"
		echo ""
		echo -e "\tYou can also specify a module name followed by"
		echo -e "\tthe URL instead of using the auto-detect."
		type 1
		echo -e "Download Modules:"
		type 0
		for mod in "${MODS[@]}"; do
			longname=$(temp=\$${mod}_longname && eval echo $temp)
			url=$(temp=\$${mod}_url && eval echo $temp)
			echo -ne "\tModule Name:\t\t"
			color 3
			echo -e "$mod"
			type 0
			echo -ne "\t\tLong Name:\t\t"
			color 4
			echo -e "$longname"
			type 0
			echo -ne "\t\tSite(s) Used with:\t"
			color 5
			echo -e "$url"
			type 0
			echo ""
		done
		type 1
		echo -e "Misc Info"
		type 0
		echo -e "\tIf you see an emote in the output, it means we had to deal"
		echo -e "\twith a retrieval quirk."
		echo -e "\n\t[ :/ ]\tGiven GZip'd data even though we said it wasn't"
		echo -e "\t\tsupported in the GET."
		type 2
		echo -e "\t\tThis happens frequently with batoto when doing"
		echo -e "\t\tmultiple fetches. :/"
		type 0
		echo ""
		echo -e "\tSome modules accept an extra parameter. Usually, this"
		echo -e "\tis a filter. Try values like 'English' or 'French'."
	else # Module operation.
		eval $MATCH
	fi
fi
