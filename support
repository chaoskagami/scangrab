type() {
	echo -ne "\x1b[$1m"
}

color() {
	echo -ne "\x1b[3$1m"
}

cbz_make() {
	echo -ne "[Post] Making CBZ..."
	zip -r "$1.zip" "$1" > /dev/null 2>&1
	mv "$1.zip" "$1.cbz" > /dev/null 2>&1
	
	echo -ne "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b[Post] Cleanup..."
	rm -rf "$1"
	echo -e "\b\b\b\b\b\b\b\b\b\bFinished.    "
}


_SPINNER_CHAR="|"
_NUM=0
_FIRST=1
spinner() {
	if [ $_FIRST = 1 ]; then
		_FIRST=0
	else
		echo -ne "\b\b\b\b"
	fi

	for (( i=0 ; i < _NUM ; i++ )); do
		echo -ne "\b"
	done

	if [ "$_SPINNER_CHAR" = "|" ]; then
		_SPINNER_CHAR="/"
	elif [ "$_SPINNER_CHAR" = "/" ]; then
		_SPINNER_CHAR="-"
	elif [ "$_SPINNER_CHAR" = "-" ]; then
		_SPINNER_CHAR="\\"
	elif [ "$_SPINNER_CHAR" = "\\" ]; then
		_SPINNER_CHAR="|"
	fi

	_NUM=${#1}
	echo -ne "[$1 $_SPINNER_CHAR]"
}

done_spin() {
	for (( i=0 ; i < _NUM ; i++ )); do
		echo -ne "\b"
	done
	echo -e "\b\b\b[OK]"
}

FETCH_RESULT="0"
FETCH_CMD=""
_FETCHTOOL=0
_BUSYBOX=0
fetch_detect() {
	_wget="$(which wget)"
	_curl="$(which curl)"
	if [ ! "$_wget" = "" ]; then
		common_opts=" --quiet --no-cache --user-agent=\"Mozilla/4.0\" -c -t 0 --random-wait "

		if [ ! "$($_wget --help 2>&1 | grep busybox)" = "" ]; then
			echo "[Warning] Your system wget is busybox, which can't actually do some things like reject cache and retry."
			common_opts=" -q -c -U \"Mozilla/4.0\""
			_BUSYBOX=1
		fi

		FETCH_CMD="$_wget $common_opts"
		_FETCHTOOL=1
	else
		if [ ! "$_curl" = "" ]; then
				FETCH_CMD=$_curl
				_FETCHTOOL=2
		fi
	fi

	return $FETCH_RESULT	
}

fetch() {
	if [ $_FETCHTOOL = 1 ]; then
		_CMD="$FETCH_CMD $1"
		if [ ! "$2" = "" ]; then
			_CMD="$_CMD -O $2"
		fi
	elif [ $_FETCHTOOL = 2 ]; then
		_CMD="$FETCH_CMD $1"
		if [ "$2" = "" ]; then
			_CMD="$_CMD > $(basename "$1")"
		elif [ ! "$2" = "-" ]; then
			_CMD="$_CMD > "$2""
		fi
	fi

	$_CMD
	FETCH_RESULT=$?
	if [ $_BUSYBOX = 1 ] && [ ! $FETCH_RESULT = 0]; then
		echo "[WARNING] Image failed on busybox. Cannot retry."
	fi
	return $FETCH_RESULT
}

entity_to_char() {
	# This probably doesn't handle every case. It should be enough.
	sed \
		-e "s/&#32;/ /g" \
		-e "s/&nbsp;/ /g" \
		-e "s/&#33;/\!/g" \
		-e "s/&#34;/\"/g" \
		-e "s/&#35;/\#/g" \
		\
		-e "s/&#36;/\$/g" \
		-e "s/&#37;/\%/g" \
		-e "s/&amp;/\&/g" \
		-e "s/&#38;/\&/g" \
		-e "s/&#39;/'/g" \
		\
		-e "s/&#40;/\(/g" \
		-e "s/&#41;/\)/g" \
		-e "s/&#42;/\*/g" \
		-e "s/&#43;/\+/g" \
		-e "s/&#44;/\,/g" \
		\
		-e "s/&#45;/\-/g" \
		-e "s/&#46;/\./g" \
		-e "s/&#58;/\:/g" \
		-e "s/&#59;/\;/g" \
		-e "s/&lt;/\</g" \
		\
		-e "s/&#60;/\</g" \
		-e "s/&gt/\>/g" \
		-e "s/&#61;/\>/g" \
		-e "s/&#63;/\?/g" \
		-e "s/&#64;/\@/g" \
		\
		-e "s/&#91;/\[/g" \
		-e "s/&#92;/\\\\/g" \
		-e "s/&#93;/\]/g" \
		-e "s/&#94;/\^/g" \
		-e "s/&#95;/\_/g" \
		\
		-e "s/&#123;/\{/g" \
		-e "s/&#124;/\|/g" \
		-e "s/&#125;/\}/g" \
		-e "s/&#126;/\~/g" \
		-e "s/&yen;/¥/g" \
		\
		-e "s/&#165;/¥/g" \
		-e "s/&sup2;/²/g" \
		-e "s/&#178;/²/g" \
		-e "s/&sup3;/³/g" \
		-e "s/&#179;/³/g" \
		\
		-e "s/&frac14;/¼/g" \
		-e "s/&#188;/¼/g" \
		-e "s/&frac12;/½/g" \
		-e "s/&#189;/½/g" \
		-e "s/&frac34;/¾/g" \
		\
		-e "s/&#190;/¾/g" \
		-e "s/&spades;/♠/g" \
		-e "s/&#9824;/♠/g" \
		-e "s/&clubs;/♣/g" \
		-e "s/&#9827;/♣/g" \
		\
		-e "s/&hearts;/♥/g" \
		-e "s/&#9829;/♥/g" \
		-e "s/&diams;/♦/g" \
		-e "s/&#9830;/♦/g"

}
